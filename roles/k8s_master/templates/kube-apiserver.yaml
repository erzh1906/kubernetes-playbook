################################################################
##                                                            ##
## GENERATED FROM ANSIBLE TEMPLATE                            ##
## DO NOT EDIT DIRECTLY                                       ##
## YOUR CHANGES WILL BE OVERWRITEN WHEN NEXT ANSIBLE TASK RUN ##
##                                                            ##
################################################################
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --advertise-address={{ ansible_default_ipv4.address }}
    - --allow-privileged
    - --audit-log-maxage=30
    - --audit-log-maxbackup=3
    - --audit-log-maxsize=100
    - --audit-log-format=json
    - --authorization-mode=Node,RBAC
    - --anonymous-auth=false
    - --bind-address=0.0.0.0
    - --insecure-port=0
    - --client-ca-file=/etc/ssl/kubernetes/ca.crt
    - --enable-admission-plugins=NodeRestriction
    - --enable-swagger-ui=true
    - --enable-bootstrap-token-auth=true
    - --token-auth-file=/etc/ssl/kubernetes/bootstrap.token
    - --etcd-cafile=/etc/ssl/kubernetes/etcd/ca.crt
    - --etcd-certfile=/etc/ssl/kubernetes/apiserver-etcd-client.crt
    - --etcd-keyfile=/etc/ssl/kubernetes/apiserver-etcd-client.key
    - --etcd-servers={% for item in groups[etcd_group_name] %}https://{{ hostvars[item]['ansible_default_ipv4']['address'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}
    - --event-ttl=1h
    - --experimental-encryption-provider-config=/srv/kubernetes/encryption-config.yaml
    - --kubelet-certificate-authority=/etc/ssl/kubernetes/ca.crt
    - --kubelet-client-certificate=/etc/ssl/kubernetes/apiserver-kubelet-client.crt
    - --kubelet-client-key=/etc/ssl/kubernetes/apiserver-kubelet-client.key
    - --kubelet-https=true
    - --proxy-client-cert-file=/etc/ssl/kubernetes/front-proxy-client.crt
    - --proxy-client-key-file=/etc/ssl/kubernetes/front-proxy-client.key
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-client-ca-file=/etc/ssl/kubernetes/front-proxy-ca.crt
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --runtime-config=api/all
    - --service-account-key-file=/etc/ssl/kubernetes/sa.crt
    - --service-cluster-ip-range={{ kube_service_cluster_ip_range }}
    - --service-node-port-range=30000-32767
    - --tls-cert-file=/etc/ssl/kubernetes/apiserver.crt
    - --tls-private-key-file=/etc/ssl/kubernetes/apiserver.key
    - --v=3
    image: k8s.gcr.io/kube-apiserver:v{{ kube_version }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      tcpSocket:
        port: 6443
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-apiserver
    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - mountPath: /srv/kubernetes
      name: srvkube
      readOnly: true
    - mountPath: /etc/ssl
      name: etcssl
      readOnly: true
  dnsPolicy: ClusterFirst
  hostNetwork: true
  priorityClassName: system-cluster-critical
  securityContext: {}
  volumes:
  - hostPath:
      path: /var/lib/kubernetes
      type: "DirectoryOrCreate"
    name: srvkube
  - hostPath:
      path: /etc/ssl
      type: "DirectoryOrCreate"
    name: etcssl
