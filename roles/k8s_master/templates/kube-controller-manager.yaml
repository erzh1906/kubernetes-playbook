################################################################
##                                                            ##
## GENERATED FROM ANSIBLE TEMPLATE                            ##
## DO NOT EDIT DIRECTLY                                       ##
## YOUR CHANGES WILL BE OVERWRITEN WHEN NEXT ANSIBLE TASK RUN ##
##                                                            ##
################################################################
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-controller-manager
    - --address=0.0.0.0
    - --authentication-kubeconfig=/srv/kubernetes/kube-controller-manager.kubeconfig
    - --authorization-kubeconfig=/srv/kubernetes/kube-controller-manager.kubeconfig
    - --client-ca-file=/etc/ssl/kubernetes/ca.crt
    - --cluster-signing-cert-file=/etc/ssl/kubernetes/ca.crt
    - --cluster-signing-key-file=/etc/ssl/kubernetes/ca.key
    - --controllers=*,bootstrapsigner,tokencleaner
    - --kubeconfig=/srv/kubernetes/kube-controller-manager.kubeconfig
    - --leader-elect=true
    - --requestheader-client-ca-file=/etc/ssl/kubernetes/front-proxy-ca.crt
    - --root-ca-file=/etc/ssl/kubernetes/ca.crt
    - --service-account-private-key-file=/etc/ssl/kubernetes/sa.key
    - --use-service-account-credentials=true
    - --v=3
{% if kube_cni_type == "flannel" %}
    - --allocate-node-cidrs=true
    - --cluster-cidr={{ kube_pod_ip_range }}
    - --node-cidr-mask-size=24
{% endif %}
    image: k8s.gcr.io/kube-controller-manager:v{{ kube_version }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: kube-controller-manager
    resources:
      requests:
        cpu: 200m
    volumeMounts:
    - mountPath: /srv/kubernetes
      name: srvkube
      readOnly: true
    - mountPath: /etc/ssl
      name: etcssl
      readOnly: true
  dnsPolicy: ClusterFirst
  hostNetwork: true
  priorityClassName: system-cluster-critical
  securityContext: {}
  volumes:
  - hostPath:
      path: /var/lib/kubernetes
      type: ""
    name: srvkube
  - hostPath:
      path: /etc/ssl
      type: ""
    name: etcssl
